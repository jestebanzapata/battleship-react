[{"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\index.js":"1","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\App.js":"2","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\PaperEffect.jsx":"4","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\assets\\static\\ship.js":"5","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\store.js":"6","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\actions\\index.js":"7","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\actions\\types.js":"8","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\reducers\\index.js":"9","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Cell\\Cell.stories.js":"10","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Cell\\Cell.style.jsx":"11","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Cell\\Cell.component.jsx":"12","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Board\\Board.component.jsx":"13","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Board\\Board.style.jsx":"14","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Board\\Board.stories.js":"15","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\constants\\types.js":"16","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\BoardContainer\\BoardContainer.component.jsx":"17","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\BoardContainer\\BoardContainer.style.jsx":"18","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\ShipContainer\\ShipContainer.component.jsx":"19","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\ShipContainer\\ShipContainer.style.jsx":"20","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Ship\\Ship.component.jsx":"21","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Ship\\Ship.styles.jsx":"22"},{"size":621,"mtime":1609775197075,"results":"23","hashOfConfig":"24"},{"size":228,"mtime":1611097699771,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":746,"mtime":1611009514540,"results":"27","hashOfConfig":"24"},{"size":547,"mtime":1608409739390,"results":"28","hashOfConfig":"24"},{"size":782,"mtime":1611167260955,"results":"29","hashOfConfig":"24"},{"size":479,"mtime":1611159804754,"results":"30","hashOfConfig":"24"},{"size":212,"mtime":1611159796205,"results":"31","hashOfConfig":"24"},{"size":2056,"mtime":1611168023369,"results":"32","hashOfConfig":"24"},{"size":392,"mtime":1611073252380,"results":"33","hashOfConfig":"24"},{"size":1088,"mtime":1611274286663,"results":"34","hashOfConfig":"24"},{"size":2367,"mtime":1611273534548,"results":"35","hashOfConfig":"24"},{"size":3161,"mtime":1611184471551,"results":"36","hashOfConfig":"24"},{"size":1696,"mtime":1611273443640,"results":"37","hashOfConfig":"24"},{"size":2095,"mtime":1611158352718,"results":"38","hashOfConfig":"24"},{"size":4285,"mtime":1611158305193,"results":"39","hashOfConfig":"24"},{"size":3832,"mtime":1611154743967,"results":"40","hashOfConfig":"24"},{"size":166,"mtime":1611092665694,"results":"41","hashOfConfig":"24"},{"size":811,"mtime":1611097593620,"results":"42","hashOfConfig":"24"},{"size":181,"mtime":1611097512484,"results":"43","hashOfConfig":"24"},{"size":789,"mtime":1611097261840,"results":"44","hashOfConfig":"24"},{"size":433,"mtime":1611097239697,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1mx0phb",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\index.js",[],["97","98"],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\App.js",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\PaperEffect.jsx",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\assets\\static\\ship.js",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\store.js",["99"],"import reducer from './reducers';\r\nimport {createStore} from 'redux';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { EMPTY_BOARD, DEFAULT_BOARD_MACHINE, DEFAULT_BOARD_PLAYER, gameStatus, modes } from '../constants/types';\r\n\r\nconst initialState = {\r\n    loggedUser: {\r\n      username: 'player1'\r\n    },\r\n    shipDragged: null,\r\n    gameState:{\r\n      config: {\r\n        width: 10\r\n      },\r\n      status: gameStatus.PLAYING,\r\n      mode: modes.SINGLE,\r\n      currentTurn: 'player1',\r\n      destroyedShips: {\r\n        player1: [],\r\n        machine: []\r\n      },\r\n      board: {\r\n        player1: DEFAULT_BOARD_PLAYER,\r\n        machine: DEFAULT_BOARD_MACHINE\r\n      }\r\n    }\r\n  };\r\n\r\nexport default createStore(reducer, initialState, composeWithDevTools());","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\actions\\index.js",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\actions\\types.js",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\reducers\\index.js",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Cell\\Cell.stories.js",["100"],"import React from 'react'\r\nimport Cell from './Cell.component';\r\nimport Ships from '../../assets/static/ship';\r\n\r\nexport default {\r\n  title: 'Cell',\r\n  component: Cell\r\n};\r\n\r\nconst cellStyle = {\r\n  width: '50px',\r\n  height: '50px'\r\n};\r\n\r\nexport const Default = props => <Cell {...props} style={cellStyle}/>;\r\n\r\nexport const Hit = props => <Cell {...props} ship={Ships[0]} style={cellStyle}/>;",["101","102"],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Cell\\Cell.style.jsx",["103"],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Cell\\Cell.component.jsx",["104","105","106","107"],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Board\\Board.component.jsx",["108","109"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Cell  from '../Cell/Cell.component';\r\n\r\nimport { setShipPosition } from '../../redux/actions';\r\nimport {\r\n    StyledAutoButton,\r\n    StyledBoard,\r\n    StyledBoardSubContainer,\r\n    StyledCoordCell,\r\n    StyledCoordXContainer,\r\n    StyledCoordYContainer\r\n} from './Board.style';\r\nimport { Refresh } from '@styled-icons/heroicons-outline';\r\nimport { gameStatus } from '../../constants/types';\r\nimport { useCallback } from 'react';\r\n\r\nconst alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\nfunction Board(props) {\r\n    const { user, loggedUser, board, gameState, shipDragged, generateAutoBoardHandler, addShipToBoardPositionHandler, setShipPosition} = props;\r\n    const { config, status } = gameState;\r\n    const { width } = config;\r\n\r\n    // const onDragOver = (event) => {\r\n    //     event.preventDefault();\r\n    //     // console.log(\"onDragOver => \", event);\r\n    // }\r\n\r\n    const onDragOver = useCallback(event => event.preventDefault(), []);\r\n\r\n    const onDrop = useCallback((event, positionData) => {\r\n        if (status !== gameStatus.SETTING){\r\n            return;\r\n        }\r\n        const shipPosition = addShipToBoardPositionHandler(board, shipDragged, positionData);\r\n        setShipPosition({ user, shipPosition});\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <StyledBoardSubContainer>\r\n                <StyledCoordXContainer width={width}>\r\n                    {\r\n                        Array.from(Array(width).keys()).map(index => {\r\n                            //return <Cell key={index}></Cell>;\r\n                        return <StyledCoordCell key={`coord-cell-${index}`}>{index}</StyledCoordCell>\r\n                        })\r\n                    }\r\n                </StyledCoordXContainer>\r\n\r\n                <StyledCoordYContainer width={width}>\r\n                    {\r\n                        Array.from(Array(width).keys()).map(index => {\r\n                            //return <Cell key={index}></Cell>;\r\n                        return <StyledCoordCell key={`coord-cell-${index}`}>{alphabet.substr(index, 1)}</StyledCoordCell>\r\n                        })\r\n                    }\r\n                </StyledCoordYContainer>\r\n\r\n                <StyledBoard width={width}>\r\n                    {\r\n                        // Array.from(Array(width*width).keys()).map(index => (<Cell key={index}></Cell>))\r\n                        board.map((data, index) => (<Cell key={`cell-${index}`} {...{...data, index, onDragOver, onDrop}} ></Cell>))\r\n                    }\r\n                </StyledBoard>\r\n                {\r\n                    status === gameStatus.SETTING && <StyledAutoButton onClick={() => generateAutoBoardHandler(user)}><Refresh /></StyledAutoButton>\r\n                }\r\n            </StyledBoardSubContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        gameState: state.gameState,\r\n        shipDragged: state.shipDragged,\r\n        loggedUser: state.loggedUser\r\n    }\r\n  };\r\n\r\nconst mapDispatchToProps = {\r\n    setShipPosition\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Board\\Board.style.jsx",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Board\\Board.stories.js",["110"],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\constants\\types.js",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\BoardContainer\\BoardContainer.component.jsx",["111"],"import React from 'react'\r\nimport Board from '../Board/Board.component';\r\nimport ships from '../../assets/static/ship';\r\nimport ShipContainer from '../ShipContainer/ShipContainer.component';\r\n\r\n// REDUX\r\nimport { connect } from 'react-redux';\r\nimport { setBoardInitialState, setShipDragged } from '../../redux/actions';\r\nimport { StyledBoardContainer } from './BoardContainer.style';\r\nimport { EMPTY_BOARD } from '../../constants/types';\r\n\r\n\r\nfunction Boardcontainer(props) {\r\n  const { loggedUser, gameState, setShipDragged, setBoardInitialState} = props;\r\n  const {config} = gameState;\r\n  const { width } = config;\r\n\r\n  const onShipDragStart = (e, ship) => {\r\n    console.log(\"onShipDragStart => \", ship);\r\n    setShipDragged(ship);\r\n  }\r\n\r\n  const generateAutoBoardHandler = (user) => {\r\n    const boardState = ships.reduce((accum, currentValue) => {\r\n      let shipRandomPositionGenerated = false;\r\n      while (!shipRandomPositionGenerated) {\r\n        const randomPosition = Math.floor(Math.random() * width * width);\r\n        const randomDirection = Math.floor(Math.random() * 2);\r\n        const shipToPosition = { ship: currentValue, lastSelectedShipIndex: 0, direction: randomDirection };\r\n        shipRandomPositionGenerated = addShipToBoardPositionHandler(accum, shipToPosition, { targetBoardIndex: randomPosition })\r\n      }\r\n\r\n      return accum.map((cell, index) => {\r\n        const cellModified = shipRandomPositionGenerated.find(data => data.boardIndex === index);\r\n        return cellModified ? { ship: { ...cellModified.ship } } : cell;\r\n      });\r\n\r\n\r\n    }, EMPTY_BOARD);\r\n    console.log(\"board => \", JSON.stringify(boardState));\r\n    setBoardInitialState({ user, boardState});\r\n  }\r\n\r\n  const addShipToBoardPositionHandler = (board, shipToPosition, positionData) => {\r\n    const { targetBoardIndex } = positionData;\r\n    const { ship, lastSelectedShipIndex, direction } = shipToPosition;\r\n\r\n    const shipLength = ship.length;\r\n    //Horizontal\r\n    const boardIndexes = Array.from(Array(shipLength).keys()).map(index => (targetBoardIndex - ((direction === 0 ? 1 : width) * lastSelectedShipIndex)) + (direction === 0 ? index : index * 10));\r\n\r\n    const boardIndexesOverflow = boardIndexes.find(boardIndex => boardIndex > ((width * width) - 1) || boardIndex < 0);\r\n\r\n    if (boardIndexesOverflow) {\r\n      return;\r\n    }\r\n\r\n    const isCellAlreadyTaken = boardIndexes.find(boardIndex => {\r\n      return board[boardIndex].ship != null;\r\n    });\r\n\r\n    if (isCellAlreadyTaken) {\r\n      return;\r\n    }\r\n\r\n    const rowsToModified = boardIndexes.map(boardIndex => Math.floor(boardIndex / width));\r\n    const amountRows = new Set(rowsToModified);\r\n    if (((direction === 0 && amountRows.size === 1) || (direction === 1 && amountRows.size === shipLength)) && !isCellAlreadyTaken) {\r\n      const shipPosition = boardIndexes.map(index => ({\r\n        ship: { type: ship.type, shipIndex: boardIndexes.findIndex(boardIndex => boardIndex === index), direction: 0 }, boardIndex: index\r\n      }));\r\n\r\n      return shipPosition\r\n    }\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledBoardContainer>\r\n        {\r\n          Object.entries(gameState.board).map(([user, board]) =>\r\n            <Board key={user} user={user} board={board} {...{ generateAutoBoardHandler, addShipToBoardPositionHandler}}></Board>\r\n          )\r\n        }\r\n\r\n        {/* <Board type=\"ENEMY\" board={gameState.enemyBoard}></Board> */}\r\n      </StyledBoardContainer>\r\n      <ShipContainer onShipDragStart={onShipDragStart}></ShipContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    gameState: state.gameState,\r\n    loggedUser: state.loggedUser\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setShipDragged,\r\n  setBoardInitialState\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Boardcontainer);\r\n","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\BoardContainer\\BoardContainer.style.jsx",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\ShipContainer\\ShipContainer.component.jsx",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\ShipContainer\\ShipContainer.style.jsx",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Ship\\Ship.component.jsx",["112"],"import React, { useState } from 'react';\r\nimport { StyledShip, StyledShipPiece } from './Ship.styles';\r\n\r\nfunction Ship(props) {\r\n    const {id, direction, shipData, onDragStart} = props;\r\n    const { type, length, sprites, color} = shipData;\r\n    const [lastSelectedShipIndex, setLastSelectedShipIndex] = useState(-1);\r\n    return (\r\n        <StyledShip draggable direction={direction} onDragStart={(e) => onDragStart(e, {ship: shipData, lastSelectedShipIndex, direction})}>\r\n            {\r\n                Array.from(Array(length).keys()).map(index => {\r\n                    return <StyledShipPiece key={`${type}${id}${index}`} color={color} onMouseDown={()=> setLastSelectedShipIndex(index)}/>\r\n                })\r\n            }\r\n        </StyledShip>\r\n    );\r\n}\r\n\r\nexport default Ship;","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Ship\\Ship.styles.jsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":5,"column":1,"nodeType":"123","endLine":8,"endColumn":3},{"ruleId":"113","replacedBy":"124"},{"ruleId":"115","replacedBy":"125"},{"ruleId":"117","severity":1,"message":"126","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":18},{"ruleId":"117","severity":1,"message":"127","line":6,"column":31,"nodeType":"119","messageId":"120","endLine":6,"endColumn":44},{"ruleId":"117","severity":1,"message":"128","line":11,"column":13,"nodeType":"119","messageId":"120","endLine":11,"endColumn":17},{"ruleId":"117","severity":1,"message":"129","line":11,"column":19,"nodeType":"119","messageId":"120","endLine":11,"endColumn":28},{"ruleId":"117","severity":1,"message":"130","line":11,"column":30,"nodeType":"119","messageId":"120","endLine":11,"endColumn":39},{"ruleId":"117","severity":1,"message":"131","line":21,"column":19,"nodeType":"119","messageId":"120","endLine":21,"endColumn":29},{"ruleId":"132","severity":1,"message":"133","line":38,"column":8,"nodeType":"134","endLine":38,"endColumn":10,"suggestions":"135"},{"ruleId":"121","severity":1,"message":"122","line":8,"column":1,"nodeType":"123","endLine":15,"endColumn":3},{"ruleId":"117","severity":1,"message":"131","line":14,"column":11,"nodeType":"119","messageId":"120","endLine":14,"endColumn":21},{"ruleId":"117","severity":1,"message":"136","line":6,"column":27,"nodeType":"119","messageId":"120","endLine":6,"endColumn":34},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'EMPTY_BOARD' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["137"],["138"],"'animated' is defined but never used.","'useTransition' is defined but never used.","'type' is assigned a value but never used.","'shipIndex' is assigned a value but never used.","'direction' is assigned a value but never used.","'loggedUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'addShipToBoardPositionHandler', 'board', 'setShipPosition', 'shipDragged', 'status', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["139"],"'sprites' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [addShipToBoardPositionHandler, board, setShipPosition, shipDragged, status, user]",{"range":"142","text":"143"},[1307,1309],"[addShipToBoardPositionHandler, board, setShipPosition, shipDragged, status, user]"]