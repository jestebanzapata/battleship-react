[{"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\index.js":"1","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\App.js":"2","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Board.jsx":"4","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Cell.jsx":"5","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\PaperEffect.jsx":"6","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\ShipContainer.jsx":"7","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Ship.jsx":"8","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\assets\\static\\ship.js":"9","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\store.js":"10","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\actions\\index.js":"11","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\actions\\types.js":"12","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\reducers\\index.js":"13"},{"size":621,"mtime":1609775197075,"results":"14","hashOfConfig":"15"},{"size":1358,"mtime":1609776113738,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":6248,"mtime":1609776077595,"results":"18","hashOfConfig":"15"},{"size":842,"mtime":1608511821508,"results":"19","hashOfConfig":"15"},{"size":731,"mtime":1608337843360,"results":"20","hashOfConfig":"15"},{"size":830,"mtime":1608501784466,"results":"21","hashOfConfig":"15"},{"size":1079,"mtime":1608501883905,"results":"22","hashOfConfig":"15"},{"size":547,"mtime":1608409739390,"results":"23","hashOfConfig":"15"},{"size":1123,"mtime":1609896618649,"results":"24","hashOfConfig":"15"},{"size":358,"mtime":1609776411948,"results":"25","hashOfConfig":"15"},{"size":152,"mtime":1609776397472,"results":"26","hashOfConfig":"15"},{"size":1049,"mtime":1608524168840,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1mx0phb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\index.js",[],["62","63"],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\App.js",["64","65","66"],"import { useState } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport Board from './components/Board'; \nimport PapperEffect from './components/PaperEffect';\nimport ShipContainer from './components/ShipContainer';\nimport Ships from './assets/static/ship';\nimport { connect } from 'react-redux';\nimport { setShipDragged } from './redux/actions';\n\n\nconst StyledBoardContainer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    padding: 10px 10px;\n`;\n\nconst StyledBackground = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background-color: white;\n  z-index: -1;\n  display: grid;\n`;\n\nfunction App({gameState, setShipDragged}) {\n\n  const onShipDragStart = (e, ship) => {\n    console.log(\"onShipDragStart => \", ship);\n    setShipDragged(ship);\n  }\n\n  return (\n    <div className=\"App\">\n      <StyledBoardContainer>\n        <Board type=\"PLAYER\" board={gameState.playerBoard}></Board>\n        <Board type=\"ENEMY\" board={gameState.enemyBoard}></Board>\n      </StyledBoardContainer>\n      <ShipContainer shipArray={Ships} onShipDragStart={onShipDragStart}></ShipContainer>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    gameState: state.gameState\n  }\n};\n\nconst mapDispatchToProps = {\n  setShipDragged\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Board.jsx",["67","68","69","70","71","72"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Cell from './Cell';\r\n\r\nimport { setGameState, setShipPosition } from '../redux/actions';\r\nimport ships from '../assets/static/ship';\r\n\r\nconst StyledBoard = styled.div`\r\n    display: grid;\r\n    grid-area: board;\r\n    grid-template-rows: repeat(${(props) => props.width}, 4.6vmin);\r\n    grid-template-columns: repeat(${(props) => props.width}, 4.6vmin);\r\n    background-color: #FBFFFF;\r\n    border: 4px solid #5937CF;\r\n`;\r\n\r\nconst StyledBoardContainer = styled.div`\r\n    display: grid;\r\n    grid-template-areas: \". coordX\"\r\n                         \"coordY board\"\r\n                         \"autobutton autobutton\";\r\n`;\r\n\r\n\r\nconst StyledCoordXContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(${(props) => props.width}, 4.6vmin);\r\n    height: 4.6vmin;\r\n    grid-area: coordX;\r\n    /* border: 4px solid #5937CF; */\r\n    margin: 4px;\r\n    border-bottom: 0px solid;\r\n`;\r\n\r\nconst StyledCoordYContainer = styled.div`\r\n    display: grid;\r\n    grid-template-rows: repeat(${(props) => props.width}, 4.6vmin);\r\n    grid-area: coordY;\r\n    width: 4.6vmin;\r\n    /* border: 4px solid #5937CF; */\r\n    margin: 4px;\r\n    border-right: 0px solid;\r\n`;\r\n\r\nconst StyledCoordCell = styled.div`\r\n    border: 1px solid #C1E8EE;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst StyledAutoButton = styled.button`\r\n    grid-area: autobutton;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\nfunction Board(props) {\r\n    const { gameConfig, board, shipDragged, setShipPosition, setGameState} = props;\r\n    const { width } = gameConfig;\r\n\r\n    const onDragOver = (event) => {\r\n        event.preventDefault();\r\n        // console.log(\"onDragOver => \", event);\r\n\r\n    }\r\n\r\n    const onDrop = (event, positionData) => {\r\n        const shipPosition = addShipToBoardPosition(board, shipDragged, positionData);\r\n        setShipPosition(shipPosition);\r\n    }\r\n\r\n    const generateAutoBoard = () => {\r\n        const newGameState = ships.reduce((accum, currentValue) => {\r\n            let shipRandomPositionGenerated = false;\r\n            while (!shipRandomPositionGenerated) {\r\n                const randomPosition = Math.floor(Math.random() * width*width);\r\n                const randomDirection = Math.floor(Math.random() * 2);\r\n                const shipToPosition = { ship: currentValue, lastSelectedShipIndex: 0, direction: randomDirection};\r\n                shipRandomPositionGenerated = addShipToBoardPosition(accum, shipToPosition, {targetBoardIndex: randomPosition})                    \r\n            }\r\n            \r\n            return accum.map((cell, index) => {\r\n                const cellModified = shipRandomPositionGenerated.find(data => data.boardIndex == index);\r\n                return  cellModified ? { ship: {...cellModified.ship}}: cell;\r\n            });\r\n\r\n\r\n        }, [...board]);\r\n        setGameState(newGameState);\r\n    }\r\n\r\n\r\n    const addShipToBoardPosition = (board, shipToPosition, positionData) => {\r\n\r\n        const {targetBoardIndex} = positionData;\r\n        const { ship, lastSelectedShipIndex, direction} = shipToPosition;\r\n\r\n        const shipLength = ship.length;\r\n        //Horizontal\r\n        const boardIndexes = Array.from(Array(shipLength).keys()).map(index => (targetBoardIndex - ((direction == 0 ? 1 : width) *lastSelectedShipIndex))+(direction == 0 ? index: index*10));       \r\n\r\n        const boardIndexesOverflow = boardIndexes.find(boardIndex => boardIndex > (width - 1) || boardIndex < 0);\r\n        \r\n        if(boardIndexesOverflow){\r\n            return;\r\n        }    \r\n\r\n        const isCellAlreadyTaken = boardIndexes.find(boardIndex => {\r\n            return board[boardIndex].ship != null;\r\n        });\r\n\r\n        if(isCellAlreadyTaken){\r\n            return;\r\n        }    \r\n\r\n        const rowsToModified = boardIndexes.map(boardIndex => Math.floor(boardIndex/width));\r\n        const amountRows = new Set(rowsToModified);\r\n        if(((direction == 0 && amountRows.size === 1) || (direction == 1 && amountRows.size === shipLength))  && !isCellAlreadyTaken){\r\n            const shipPosition = boardIndexes.map(index => ({\r\n                ship: {type: ship.type, shipIndex: boardIndexes.findIndex(boardIndex => boardIndex == index), direction: 0}, boardIndex: index\r\n            }));\r\n\r\n            return shipPosition\r\n        }\r\n        return null;\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <StyledBoardContainer>\r\n                <StyledCoordXContainer width={width}>\r\n                    {\r\n                        Array.from(Array(width).keys()).map(index => {\r\n                            //return <Cell key={index}></Cell>;\r\n                        return <StyledCoordCell key={`coord-cell-${index}`}>{index}</StyledCoordCell>\r\n                        })\r\n                    }\r\n                </StyledCoordXContainer>\r\n\r\n                <StyledCoordYContainer width={width}>\r\n                    {\r\n                        Array.from(Array(width).keys()).map(index => {\r\n                            //return <Cell key={index}></Cell>;\r\n                        return <StyledCoordCell key={`coord-cell-${index}`}>{alphabet.substr(index, 1)}</StyledCoordCell>\r\n                        })\r\n                    }\r\n                </StyledCoordYContainer>    \r\n\r\n                <StyledBoard width={width}>\r\n                    {\r\n                        // Array.from(Array(width*width).keys()).map(index => (<Cell key={index}></Cell>))\r\n                        board.map((data, index) => (<Cell key={`cell-${index}`} {...{...data, index, onDragOver, onDrop}} ></Cell>))\r\n                    }\r\n                </StyledBoard>\r\n                <StyledAutoButton onClick={() => generateAutoBoard()}>AUTO</StyledAutoButton>\r\n            </StyledBoardContainer>            \r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        gameConfig: state.gameConfig, \r\n        shipDragged: state.shipDragged,\r\n    }\r\n  };\r\n\r\nconst mapDispatchToProps = {\r\n    setShipPosition,\r\n    setGameState\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Cell.jsx",["73","74","75","76"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Ships from '../assets/static/ship';\r\n\r\nconst StyledCell = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 1px solid #C1E8EE;\r\n    font-weight: bold;\r\n    font-size: 2rem;\r\n    color: #ff9f9f;\r\n\r\n    ${(props) => props.ship && `background-color: ${Ships.find(ship => ship.type == props.ship.type).color}`}\r\n`;\r\n\r\nfunction Cell(props) {\r\n    const {index, wasHit=false, ship, onDragOver, onDrop} = props;\r\n    const { type, shipIndex, direction } = ship || {};\r\n\r\n    return (\r\n        <StyledCell {...props} onDragOver={(e) => onDragOver(e)} onDrop={(e) => onDrop(e, {targetBoardIndex: index})}>\r\n            {\r\n                wasHit && 'X'\r\n            }\r\n        </StyledCell>\r\n    );\r\n}\r\n\r\nexport default Cell;","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\PaperEffect.jsx",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\ShipContainer.jsx",["77"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Ship from './Ship';\r\n\r\nconst StyledShipContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    gap: 25px;\r\n`;\r\n\r\nfunction ShipContainer(props) {\r\n    const {shipArray, onShipDragStart} = props;\r\n\r\n    const [direction, setDirection] = useState(0);\r\n\r\n    return (\r\n        <StyledShipContainer>\r\n            {\r\n                shipArray.map(ship => (\r\n                    <Ship direction={direction} shipData={ship} onDragStart={onShipDragStart}></Ship>\r\n                ))\r\n            }\r\n            <button onClick={() => setDirection(previousDirection => previousDirection == 0 ? 1: 0)}>Rotate Ship</button>        \r\n        </StyledShipContainer>\r\n    );\r\n}\r\n\r\nexport default ShipContainer;","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\components\\Ship.jsx",["78","79","80"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledShip = styled.div`\r\n    display: flex;\r\n\r\n    ${(props) => props.direction == 1 && `flex-direction: column`}    \r\n`;\r\n\r\nconst StyledShipPiece = styled.div`\r\n    border: 1px solid black;\r\n    width: 4.6vmin;\r\n    height: 4.6vmin;    \r\n    cursor: move;\r\n    background-color: ${(props) => props.color ? props.color: 'black'};\r\n`;\r\n\r\nfunction Ship(props) {\r\n    const {direction, shipData, onDragStart} = props;\r\n    const { type, length, sprites, color} = shipData;\r\n    const [lastSelectedShipIndex, setLastSelectedShipIndex] = useState(-1);\r\n    return (\r\n        <StyledShip draggable direction={direction} onDragStart={(e) => onDragStart(e, {ship: shipData, lastSelectedShipIndex, direction})}>\r\n            {\r\n                Array.from(Array(length).keys()).map(index => {\r\n                    return <StyledShipPiece color={color} onMouseDown={()=> setLastSelectedShipIndex(index)}/>\r\n                })\r\n            }\r\n        </StyledShip>\r\n    );\r\n}\r\n\r\nexport default Ship;","C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\assets\\static\\ship.js",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\store.js",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\actions\\index.js",[],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\actions\\types.js",[],["81","82"],"C:\\Users\\user\\Documents\\reactjs\\battleship\\src\\redux\\reducers\\index.js",["83"],"const reducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_GAME_STATE':\r\n            return {\r\n                ...state,\r\n                gameState: [...action.payload]\r\n            };\r\n        case 'SET_SHIP_DRAGGED':\r\n            console.log(\"action SET_SHIP_DRAGGED => \", action);\r\n            return {\r\n                ...state,\r\n                shipDragged: {...action.payload}\r\n            };\r\n        case 'SET_SHIP_POSITION':                   \r\n            const shipPosition  = action.payload;\r\n            const newState = {\r\n                ...state,\r\n                gameState: state.gameState.map((cell, index) => {\r\n                    const cellModified = shipPosition.find(data => data.boardIndex == index);\r\n                    return  cellModified ? { ship: {...cellModified.ship}}: cell;\r\n                })\r\n            };\r\n            console.log(\"NewState ==> \", newState);\r\n            return newState;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":18},{"ruleId":"88","severity":1,"message":"92","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":20},{"ruleId":"88","severity":1,"message":"93","line":18,"column":7,"nodeType":"90","messageId":"91","endLine":18,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":86,"column":95,"nodeType":"96","messageId":"97","endLine":86,"endColumn":97},{"ruleId":"94","severity":1,"message":"95","line":103,"column":112,"nodeType":"96","messageId":"97","endLine":103,"endColumn":114},{"ruleId":"94","severity":1,"message":"95","line":103,"column":166,"nodeType":"96","messageId":"97","endLine":103,"endColumn":168},{"ruleId":"94","severity":1,"message":"95","line":121,"column":24,"nodeType":"96","messageId":"97","endLine":121,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":121,"column":69,"nodeType":"96","messageId":"97","endLine":121,"endColumn":71},{"ruleId":"94","severity":1,"message":"95","line":123,"column":100,"nodeType":"96","messageId":"97","endLine":123,"endColumn":102},{"ruleId":"94","severity":1,"message":"95","line":14,"column":82,"nodeType":"96","messageId":"97","endLine":14,"endColumn":84},{"ruleId":"88","severity":1,"message":"98","line":19,"column":13,"nodeType":"90","messageId":"91","endLine":19,"endColumn":17},{"ruleId":"88","severity":1,"message":"99","line":19,"column":19,"nodeType":"90","messageId":"91","endLine":19,"endColumn":28},{"ruleId":"88","severity":1,"message":"100","line":19,"column":30,"nodeType":"90","messageId":"91","endLine":19,"endColumn":39},{"ruleId":"94","severity":1,"message":"95","line":24,"column":88,"nodeType":"96","messageId":"97","endLine":24,"endColumn":90},{"ruleId":"94","severity":1,"message":"95","line":7,"column":34,"nodeType":"96","messageId":"97","endLine":7,"endColumn":36},{"ruleId":"88","severity":1,"message":"98","line":20,"column":13,"nodeType":"90","messageId":"91","endLine":20,"endColumn":17},{"ruleId":"88","severity":1,"message":"101","line":20,"column":27,"nodeType":"90","messageId":"91","endLine":20,"endColumn":34},{"ruleId":"84","replacedBy":"102"},{"ruleId":"86","replacedBy":"103"},{"ruleId":"94","severity":1,"message":"95","line":20,"column":84,"nodeType":"96","messageId":"97","endLine":20,"endColumn":86},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'PapperEffect' is defined but never used.","'StyledBackground' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'type' is assigned a value but never used.","'shipIndex' is assigned a value but never used.","'direction' is assigned a value but never used.","'sprites' is assigned a value but never used.",["104"],["105"],"no-global-assign","no-unsafe-negation"]